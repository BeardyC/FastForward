---
version: 2.1
defaults: &defaults
  docker:
    - image: amazon/aws-cli
  working_directory: ~/

executors:
  aws_executor:
    docker:
      - image: amazon/aws-cli

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy Infra
          command: |
            aws cloudformation delete-stack --stack-name test-${CIRCLE_WORKFLOW_ID} 

jobs:
  create_infrastructure:
    <<: *defaults
    steps:
      - checkout
      - run: aws cloudformation deploy --stack-name test-${CIRCLE_WORKFLOW_ID} --template-file template.yml  --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM"
  populate_inventory:
    <<: *defaults
    steps:
      - run: |
          echo [all] >> inventory.txt
          aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Project,Values=TestServer" --output text >> inventory.txt
      - run: | 
          cat inventory.txt
          pwd
      - save_cache:
          key: inventory-{{ ${CIRCLE_WORKFLOW_ID} }}
          paths: ~/inventory.txt

  deploy_job:
    docker: 
      - image: python:3.7-alpine3.11
    working_directory: ~/
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "fc:9a:a5:f0:bb:74:6a:59:ae:ba:f7:1d:55:24:22:08"
      - run: apk add --update ansible 
      - restore_cache:
          key: inventory
      - run: cat ~/inventory.txt  
      - run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.txt main.yml 
      - run:
          name: Destroy Infra
          command: |
            aws cloudformation delete-stack --stack-name test-${CIRCLE_WORKFLOW_ID}
          when: on_fail    
  smoke_test:
    <<: *defaults
    steps:
      - run: apk add --update curl
      # - run:
      #     name: smoke test.
      #     command: |
      #       URL="https://google333.com/"
      #       if curl -s --head ${URL} 
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi
      - destroy_environment
workflows:
  infra:
    jobs:
      # - create_infrastructure
      - populate_inventory:
          # requires:
          #   - create_infrastructure
      - deploy_job:
          requires:
            - populate_inventory
      - smoke_test:
          requires:
            - deploy_job